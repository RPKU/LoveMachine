name: Manual release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

jobs:

  build:

    uses: ./.github/workflows/build.yml
    with:
      version: ${{ github.event.inputs.version }}

  release:

    needs: build
    runs-on: windows-2022
    timeout-minutes: 10
    
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      INNO_SETUP_URL: https://web.archive.org/web/20220519201547if_/https://files.jrsoftware.org/is/6/innosetup-6.2.1.exe
      BEPINEX_32_URL: https://github.com/BepInEx/BepInEx/releases/download/v5.4.18/BepInEx_x86_5.4.18.0.zip
      BEPINEX_64_URL: https://github.com/BepInEx/BepInEx/releases/download/v5.4.18/BepInEx_x64_5.4.18.0.zip
      BEPINEX_IL2CPP_64_URL: https://builds.bepinex.dev/projects/bepinex_be/660/BepInEx-Unity.IL2CPP-win-x64-6.0.0-be.660%2B40bf261.zip
      BEPINEX_CONF_MGR_URL: https://github.com/BepInEx/BepInEx.ConfigurationManager/releases/download/v16.4/BepInEx.ConfigurationManager_v16.4.zip
    
    defaults:
      run:
        working-directory: src

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install Alias
      run: dotnet tool install --global Alias

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: src

    - name: Download and install Inno Setup
      run: |
        [Net.ServicePointManager]::SecurityProtocol = "tls12, tls11, tls"
        Invoke-WebRequest -Uri ${{env.INNO_SETUP_URL}} -OutFile innosetup.exe
        & ./innosetup.exe /VERYSILENT /NORESTART /ALLUSERS

    - name: Zip artifacts
      run: |
        mkdir assets
        $plugins = Get-ChildItem -Name -Path bin/ | Where-Object { $_ -notlike "LoveMachine.Core*" }
        foreach ($plugin in $plugins) {
          $info = "./$plugin/PluginInfo.ini"
          $gameName = Get-Content -Path $info | Where-Object { $_ -match "NameEN = *" }
          $gameName = $gameName.Substring($gameName.IndexOf("= ") + 2)
          $gameName = $gameName.Replace(" ", "_")
          & ./alias-deps.bat "./bin/$plugin/BepInEx/plugins"
          Compress-Archive -Path "./bin/$plugin/BepInEx" -DestinationPath "./assets/LoveMachine_for_${gameName}.zip"
        }

    - name: Download BepInEx
      working-directory: src/Installer
      run: |
        [Net.ServicePointManager]::SecurityProtocol = "tls12, tls11, tls"
        Invoke-WebRequest -Uri ${{env.BEPINEX_32_URL}} -OutFile BepInEx32.zip
        Invoke-WebRequest -Uri ${{env.BEPINEX_64_URL}} -OutFile BepInEx64.zip
        Invoke-WebRequest -Uri ${{env.BEPINEX_IL2CPP_64_URL}} -OutFile BepInExIl2cpp64.zip
        Invoke-WebRequest -Uri ${{env.BEPINEX_CONF_MGR_URL}} -OutFile BepInEx.ConfigurationManager.zip
        Expand-Archive -Path BepInEx32.zip -DestinationPath BepInEx32
        Expand-Archive -Path BepInEx64.zip -DestinationPath BepInEx64
        Expand-Archive -Path BepInExIl2cpp64.zip -DestinationPath BepInExIl2cpp64
        Expand-Archive -Path BepInEx.ConfigurationManager.zip -DestinationPath BepInEx32
        Expand-Archive -Path BepInEx.ConfigurationManager.zip -DestinationPath BepInEx64

    - name: Build installer
      working-directory: src/Installer
      run: |
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" InstallScript.iss
        copy bin/LoveMachineInstaller.exe ../assets/LoveMachineInstaller.exe

    - name: Scan installer with VirusTotal
      uses: crazy-max/ghaction-virustotal@v3
      with:
        vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
        files: |
          src/assets/LoveMachineInstaller.exe

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release v${{ github.event.inputs.version }}
        body: write the changelog you lazy fuk
        draft: true
        prerelease: false

    - name: what the ever-fucking fuck is going on
      run: dir src/assets

    - name: Upload release assets
      id: upload-release-assets
      uses: dwenegar/upload-release-assets@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
        assets_path: src/assets
